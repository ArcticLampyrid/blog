{"version":3,"sources":["pjax.js"],"names":["$","window","history","pushState","replaceState","scrollToMainTop","postTop","document","getElementById","offsetTop","navHeight","offsetHeight","theTop","animate","scrollTop","setMetaProperty","doc","property","content","meta","querySelector","setAttribute","parentNode","removeChild","createElement","head","appendChild","getMetaProperty","els","getAttribute","replacePageContent","data","title","oldMain","replaceWith","innerHTML","scripts","getElementsByTagName","i","length","script","type","toLowerCase","newScript","createTextNode","text","insertBefore","ogTitle","ogUrl","OriginTitile","getPageData","url","addEventListener","e","state","pjax","dispatchEvent","pjaxEvents","complete","before","Event","success","error","reqUrl","needPushState","onError","location","href","request","XMLHttpRequest","onerror","console","ontimeout","onreadystatechange","readyState","responseText","newDoc","implementation","createHTMLDocument","documentElement","open","reqId","match","offset","top","NProgress","done","onComplete","timeout","load_comm","start","send","on","this","attr","includes","decodeURI"],"mappings":"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","file":"../js/pjax.min.js","sourcesContent":["$(function () {\n    if (!window.history ||\n        !window.history.pushState ||\n        !window.history.replaceState) {\n        return;\n    }\n\n    function scrollToMainTop() {\n        const postTop = document.getElementById(\"kratos-blog-post\").offsetTop\n        const navHeight = document.getElementById(\"kratos-desktop-topnav\").offsetHeight;\n        const theTop = navHeight ? postTop - navHeight : 0;\n        $(\"body,html\").animate({ scrollTop: theTop }, 600);\n    }\n\n    function setMetaProperty(doc, property, content) {\n        var meta = doc.querySelector('meta[property=\"' + property + '\"]');\n        if (meta) {\n            if (content) {\n                meta.setAttribute('content', content);\n            } else {\n                // 兼容性考虑，不直接使用 remove\n                if (meta.parentNode) {\n                    meta.parentNode.removeChild(meta);\n                }\n            }\n        } else {\n            if (!content) {\n                return;\n            }\n            meta = doc.createElement('meta');\n            meta.setAttribute('property', property);\n            meta.setAttribute('content', content);\n            doc.head.appendChild(meta);\n        }\n    }\n\n    function getMetaProperty(doc, property) {\n        const els = doc.querySelector('meta[property=\"' + property + '\"]');\n        return els ? els.getAttribute('content') : null;\n    }\n\n    function replacePageContent(data, doc) {\n        document.title = data.title || 'Untitled';\n        if (doc) {\n            const oldMain = document.getElementById(\"main\");\n            if (typeof oldMain.replaceWith === 'function') {\n                // 避免多次解析DOM树带来的性能损失\n                oldMain.replaceWith(doc.getElementById(\"main\"));\n            } else {\n                document.getElementById(\"main\").innerHTML = data.content;\n            }\n        } else {\n            document.getElementById(\"main\").innerHTML = data.content;\n        }\n        // JS必须手动执行\n        const scripts = document.getElementById(\"main\").getElementsByTagName(\"script\");\n        for (var i = 0; i < scripts.length; i++) {\n            const script = scripts[i];\n            if (!script.type || script.type.toLowerCase() === \"text/javascript\") {\n                var newScript = document.createElement(\"script\");\n                newScript.setAttribute('type', 'text/javascript');\n                newScript.appendChild(document.createTextNode(script.text));\n                if (typeof script.replaceWith === 'function') {\n                    script.replaceWith(newScript);\n                } else {\n                    // 兼容性考虑\n                    script.parentNode.insertBefore(newScript, script);\n                    script.parentNode.removeChild(script);\n                }\n            }\n        }\n        // 更新部分元数据\n        // 使用部分组件时可能会自动读取这些数据（如LiveRe评论系统）\n        setMetaProperty(document, 'og:title', data.ogTitle);\n        setMetaProperty(document, 'og:url', data.ogUrl);\n\n        // 更新外域变量\n        OriginTitile = document.title;\n    }\n    function getPageData(url, doc) {\n        return {\n            url: url,\n            title: doc.title,\n            ogTitle: getMetaProperty(doc, 'og:title'),\n            ogUrl: getMetaProperty(doc, 'og:url'),\n            content: doc.getElementById(\"main\").innerHTML,\n        }\n    }\n\n    function popStateHandler(e) {\n        if (e.state) {\n            scrollToMainTop();\n            if (typeof e.state.content === 'undefined') {\n                pjax(e.state.url, false);\n            } else {\n                replacePageContent(e.state)\n            }\n            window.dispatchEvent(pjaxEvents.complete);\n        }\n    };\n    window.addEventListener('popstate', popStateHandler);\n\n    const pjaxEvents = {\n        before: new Event('pjax:before'),\n        success: new Event('pjax:success'),\n        complete: new Event('pjax:complete'),\n        error: new Event('pjax:error'),\n    };\n\n    function pjax(reqUrl, needPushState) {\n        const beforeSend = () => {\n            // 防止评论区再被加载，重置加载函数\n            if (typeof load_comm !== 'undefined' && load_comm !== null) {\n                load_comm = null;\n            }\n\n            scrollToMainTop();\n            NProgress.start();\n\n            window.dispatchEvent(pjaxEvents.before);\n        }\n        const onError = () => {\n            location.href = reqUrl;\n            window.dispatchEvent(pjaxEvents.error);\n        }\n        const onComplete = (responseText) => {\n            window.dispatchEvent(pjaxEvents.success);\n\n            const newDoc = document.implementation.createHTMLDocument(\"pjax\");\n            newDoc.documentElement.innerHTML = responseText;\n            const isSuccessRequest = !!newDoc.getElementById(\"main\");\n            if (isSuccessRequest) {\n                history.replaceState(getPageData(location.href, document), document.title, location.href);\n                const data = getPageData(reqUrl, newDoc)\n                if (needPushState) {\n                    window.history.pushState(data, data.title, data.url);\n                }\n                replacePageContent(data, newDoc);\n\n                // 如果URL里有指定节点ID，则滚动到相应的节点位置\n                const reqId = reqUrl.match(/\\#.+$/);\n                if (reqId) {\n                    $(\"body,html\").animate({ scrollTop: $(reqId[0]).offset().top - 40 }, 600);\n                }\n            } else {\n                // 其实是失败的\n                // 不如打开一个新页面？\n                window.open(reqUrl);\n            }\n            NProgress.done();\n            window.dispatchEvent(pjaxEvents.complete);\n        }\n        const request = new XMLHttpRequest();\n        request.onerror = function (e) {\n            console.error(e);\n            onError();\n        };\n        request.ontimeout = function () {\n            onError();\n        };\n        request.onreadystatechange = function () {\n            if (request.readyState === 4) {\n                onComplete(request.responseText);\n            }\n        };\n        request.open(\"GET\", reqUrl, true);\n        request.timeout = 6000;\n        beforeSend();\n        request.send();\n    }\n    $(document).on(\"click\", 'a[target!=_blank][rel!=gallery][class!=toc-link]', function () {\n        const reqUrl = $(this).attr(\"href\");\n        if (typeof reqUrl === 'undefined') return true;\n        else if (reqUrl.includes(\"javascript:\")) return true;\n        else pjax(decodeURI(reqUrl), true);\n        return false;\n    });\n});\n"]}